{"version":3,"file":"static/js/914.ee516081.chunk.js","mappings":"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","sources":["pages/landing/Landing.tsx","shared/content/Content.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Center, Container, Heading, Image, HStack, Stack, Flex, Box, IconButton, Button } from \"@chakra-ui/react\";\n\nimport { Content, configs, useContent, MarkdownFile } from \"shared/content/Content\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { WorkPageId } from \"utils/useScroll\";\nimport { ChevronDownIcon } from \"utils/Icons\";\n\nexport const Landing: FC = () => {\n    const content = useContent(MarkdownFile.Landing);\n\n    const scrollIntoView = () => {\n        const featuredHeader = document.getElementById(WorkPageId);\n\n        if (featuredHeader) {\n            featuredHeader.scrollIntoView({ behavior: \"smooth\" });\n        }\n    };\n\n    return (\n        <Box id=\"page-landing\">\n            <Center pb={{ base: 16, md: 32 }}>\n                <HStack spacing=\"16\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n                    <Stack flex={{ base: \"1\", lg: \"0.6\" }} spacing=\"16\">\n                        <Stack spacing=\"8\">\n                            <Heading\n                                fontSize={{ base: \"5xl\", md: \"7xl\" }}\n                                lineHeight=\"1\"\n                                data-aos=\"fade-down\"\n                                data-aos-delay=\"400\"\n                            >\n                                {configs.landing.headline}\n                            </Heading>\n                            <Content data-aos=\"fade-up\" data-aos-delay=\"500\" fontSize=\"lg\">\n                                {content.landing}\n                            </Content>\n                        </Stack>\n\n                        <Socials delay={1000} />\n                    </Stack>\n                    <Container\n                        alignItems=\"center\"\n                        flex=\"0.4\"\n                        display={{ base: \"none\", lg: \"block\" }}\n                        data-aos=\"fade-up\"\n                        data-aos-delay=\"400\"\n                    >\n                        <picture>\n                            <source type=\"image/webp\" src={configs.landing.picture}></source>\n                            <source type=\"image/jpeg\" src={configs.landing.jpg}></source>\n                            <Image borderRadius=\"xl\" src={configs.landing.jpg} alt={`face-cover-image`} />\n                        </picture>\n                    </Container>\n                </HStack>\n            </Center>\n            <Flex justifyContent=\"center\" data-aos=\"fade\" data-aos-delay=\"1400\">\n                <Button\n                    as={IconButton}\n                    fontSize=\"3xl\"\n                    variant=\"icon\"\n                    aria-label=\"down arrow button\"\n                    icon={<ChevronDownIcon />}\n                    onClick={scrollIntoView}\n                ></Button>\n            </Flex>\n        </Box>\n    );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport otherProjects from \"content/projects/projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, WhatsappIcon ,LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    whatsapp: <WhatsappIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["Landing","content","useContent","MarkdownFile","id","pb","base","md","spacing","justifyContent","alignItems","flex","lg","fontSize","lineHeight","configs","landing","delay","display","type","src","borderRadius","alt","as","IconButton","variant","icon","onClick","featuredHeader","document","getElementById","WorkPageId","scrollIntoView","behavior","common","otherProjects","about","Mapper","LandingMd","About","AboutMd","fileName","useState","data","setData","useEffect","fetch","then","res","text","Content","children","rest","components","p","node","props","a","href","target","color","ul","ordered","listStylePosition","gridTemplateColumns","listStyleType","fontWeight","li","index","LinksToIconMapper","linkedin","github","facebook","whatsapp","instagram","youtube","mail","Socials","resume","exclude","size","mr","onResumeOpen","social","idx","includes","label","textTransform","open","link","window","onMailTo"],"sourceRoot":""}