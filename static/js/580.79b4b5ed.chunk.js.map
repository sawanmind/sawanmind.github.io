{"version":3,"file":"static/js/580.79b4b5ed.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/navbar/logo-type/LogoType.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport otherProjects from \"content/projects/projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }}>\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: -2 }}>\n                {variant}\n            </Text>\n        </Box>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n} from \"@chakra-ui/react\";\n\nimport { AboutPageId, WorkPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    const navItemColor = \"white\";\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(WorkPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color=\"primary.500\"\n                                onClick={onResumeOpen}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Resume\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll, WorkPageId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType text={configs.common.logoType} />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => toSection(WorkPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => toSection(AboutPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                            >\n                                About\n                            </Button>\n                        </HStack>\n                     \n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, WhatsappIcon ,LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    whatsapp: <WhatsappIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["MarkdownFile","configs","common","landing","otherProjects","about","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","useState","data","setData","useEffect","fetch","then","res","text","Content","children","rest","spacing","components","p","node","props","a","href","target","color","ul","ordered","listStylePosition","display","gridTemplateColumns","listStyleType","fontWeight","li","index","LogoType","variant","useBreakpointValue","base","mobile","md","desktop","transition","_hover","cursor","fontSize","lineHeight","fontFamily","mb","MenuDrawer","onSectionClick","currentPage","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","navItemColor","as","IconButton","ref","onClick","icon","px","placement","autoFocus","justifyContent","position","top","right","my","textDecoration","textDecorationThickness","textDecorationColor","WorkPageId","setTimeout","AboutPageId","onResumeOpen","mt","Socials","delay","resume","Navbar","bg","useColorModeValue","bgLight","bgDark","useScroll","toSection","section","document","getElementById","scrollIntoView","behavior","w","left","transform","zIndex","py","alignItems","mr","LinksToIconMapper","linkedin","github","facebook","whatsapp","instagram","youtube","mail","exclude","size","borderRadius","social","idx","includes","type","label","textTransform","open","link","window","onMailTo"],"sourceRoot":""}